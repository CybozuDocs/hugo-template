---
import { env } from "@/lib/env";
import Wovn from "@/components/Wovn.astro";
import type { BaseProps } from "./types";

interface Props extends BaseProps {}

const { page } = Astro.props;

// URLパース（簡易実装）
const baseUrl = new URL(env.baseURL);
const basePath = baseUrl.pathname;

// フルサイズの判定
const fullsize = page.isHome || basePath.startsWith("/k/");

// TSデータの読み込み処理
import { linksData } from "../../pages/_data/links";

// リージョン別データの取得
const regionData = linksData[env.targetRegion as keyof typeof linksData] || [];

// CSVフォーマットに合わせた配列形式に変換
const footerData = regionData.map((item) => [
  item.categoryId,
  item.title,
  item.url || "",
  item.status || item.target || ""
]);

// データ処理
const sep = "\t";
const legalMenu: string[] = [];
const megaMenus: { [key: string]: string[] } = {};

footerData.forEach((row: string[]) => {
  const id = row[0];
  const item = `${row[1]}${sep}${row[2]}${sep}${row[3] || ""}`;

  if (id === "999") {
    // 特別なフッター
    legalMenu.push(item);
  } else {
    if (!megaMenus[id]) {
      megaMenus[id] = [];
    }
    megaMenus[id].push(item);
  }
});

// メガメニューの処理
const processedMegaMenus = Object.entries(megaMenus).map(([index, val]) => {
  let categoryTitle = "";
  const links: string[] = [];

  val.forEach((r, i) => {
    if (i === 0) {
      categoryTitle = r.split(sep)[0];
    } else {
      links.push(r);
    }
  });

  return { index, categoryTitle, links };
});

// リーガルメニューの処理
const processedLegalMenu = legalMenu.map((item) => {
  const link = item.split(sep);
  const targetValue = link[2] || "_blank";
  return {
    text: link[0],
    href: link[1],
    target:
      targetValue === "_blank" ||
      targetValue === "_self" ||
      targetValue === "_parent" ||
      targetValue === "_top"
        ? (targetValue as "_blank" | "_self" | "_parent" | "_top")
        : ("_blank" as const),
  };
});
---

<footer id="page-footer" class={`footer${fullsize ? " footer-home" : ""}`}>
  <div class="footer-home">
    {
      fullsize && (
        <div class="footer-mega">
          <ul class="footer-mega-list">
            {processedMegaMenus.map(({ index, categoryTitle, links }) => (
              <li class="footer-mega-item">
                <h2 class="footer-mega-list-title">
                  <i class="fa fa-book" aria-hidden="true" />
                  <span class="footer-mega-list-title-text">
                    {categoryTitle}
                  </span>
                </h2>
                <ul class="footer-mega-list-list">
                  {links.map((linkItem) => {
                    const link = linkItem.split(sep);
                    const text = link[0];
                    const href = link[1];
                    const status = link[2];

                    return (
                      <li class="footer-mega-list-item">
                        <a href={href}>{text}</a>
                        {status === "jaonly" && (
                          <span class="status-info">
                            <Wovn>日本語のみ</Wovn>
                          </span>
                        )}
                      </li>
                    );
                  })}
                </ul>
              </li>
            ))}
          </ul>
        </div>
      )
    }

    <div class="footer-legal-wrap">
      <div class="footer-legal">
        <ul class="footer-legal-list">
          {
            processedLegalMenu.map((link) => (
              <li class="footer-legal-item">
                <a href={link.href} target={link.target}>
                  {link.text}
                </a>
              </li>
            ))
          }
        </ul>
        <div class="footer-legal-copyright">
          <Wovn>記載された商品名、各製品名は各社の登録商標または商標です。 ©Cybozu</Wovn>
        </div>
        {
          env.targetRegion === "US" && (
            <>
              {/* CookiePro Cookies Settings button start */}
              <button id="ot-sdk-btn" class="ot-sdk-show-settings">
                Cookie Settings
              </button>
              {/* CookiePro Cookies Settings button end */}
              <script
                is:inline
                type="text/javascript"
                src="/k/javascripts/geolocation.js"
              />
            </>
          )
        }
      </div>
    </div>
  </div>
</footer>
