---
import SearchBox from './SearchBox.astro';
import LangSelector from './LangSelector.astro';
import type { BaseProps } from './types';

interface Props extends BaseProps {}

const { env, page } = Astro.props;

// ヘッダークラスの決定
let hedclass = "";
if (page.isHome && !env.meganav) {
  hedclass = "home-header";
} else if (page.isHome && env.targetRegion === "US") {
  hedclass = "home-header";
}

// ベースURLの計算
const urlparts = env.baseURL.split('/');
const productPos = urlparts.length - 2;
const base = `/${urlparts[productPos]}/`;
const baseLink = `${base}${page.lang}/`;

// サーチボックス表示の判定
let dispSbox = true;
if (page.params.type === "search_result") {
  dispSbox = false;
} else if (page.isHome) {
  dispSbox = false;
} else if (env.previewSite) {
  dispSbox = false;
}

// ロゴ/タイトルの決定
const logoAlt = `${env.productName} ${env.help}`;

// shouldUseImage が常に true のため logoTitle は不要
// let logoTitle = "";
---

<div id="shield"></div>
<header id="header" class={`header ${hedclass}`}>
  <div id="head" class="header-wrap">
    <div class="logo-wrap">
      {!page.isHome && (
        <button id="tree-switch-mobile" class="tree-switch-mobile">
          <i class="fas fa-bars" aria-hidden="true"></i>
        </button>
      )}
      
      <h1>
        <a class="logo-link" href={baseLink}>
          <img 
            class="logo-img" 
            src={`${base}${env.logo}`} 
            alt={logoAlt} 
            title={logoAlt}
          />
        </a>
      </h1>
    </div>

    {dispSbox && (
      <SearchBox env={env} page={page} />
    )}


    {page.isTranslated && env.langSelector && page.siteLanguage && page.translations && page.relPermalink && (
      <LangSelector 
        env={{
          useWovn: env.useWovn,
          languageData: env.languageData
        }} 
        page={{
          siteLanguage: page.siteLanguage,
          translations: page.translations,
          relPermalink: page.relPermalink
        }} 
      />
    )}
  </div>
</header>