---
interface AnnouncementItem {
  key: string;
  bgColor?: string;
  fontAwesomeIcon: string;
  iconColor?: string;
  title?: string;
  text: string;
}

interface Props {
  announcements: AnnouncementItem[];
  unsupportedBrowser: string;
  unsupportedMessage: string;
  announcementButtonClose: string;
  closeText: string;
}

const { 
  announcements, 
  unsupportedBrowser, 
  unsupportedMessage, 
  announcementButtonClose, 
  closeText 
} = Astro.props;

// デフォルトのセッション通知を追加
const defaultAnnouncement: AnnouncementItem = {
  key: "session-notice-1",
  bgColor: "#f9aeb6",
  fontAwesomeIcon: "fas fa-exclamation-triangle",
  iconColor: "#cd1b49",
  title: unsupportedBrowser,
  text: unsupportedMessage
};

const allAnnouncements = [defaultAnnouncement, ...announcements];
---

{allAnnouncements.map(announcement => (
  <aside 
    class={`announcement-banner ${announcement.key}`}
    id={`announcement-banner-${announcement.key}`}
    style={`display: none;${announcement.bgColor ? `background-color: ${announcement.bgColor};` : ''}`}
  >
    <div class="announcement-banner-wrapper">
      <div class="announcement-banner-icon">
        <i 
          class={announcement.fontAwesomeIcon}
          style={announcement.iconColor ? `color: ${announcement.iconColor};` : ''}
          aria-hidden="true"
        ></i>
      </div>
      <div class="announcement-banner-content">
        <div class="announcement-banner-content-content">
          {announcement.title && (
            <div class="announcement-banner-content-title">{announcement.title}</div>
          )}
          <div class="announcement-banner-content-description" set:html={announcement.text} />
        </div>
        <div class="announcement-banner-content-button">
          <button 
            type="submit" 
            id={`announcement-${announcement.key}`}
            class="announcement-banner-content-button-close" 
            title={announcementButtonClose}
            tabindex="0"
          >
            <i class="fa fa-times-circle" aria-hidden="true"></i> 
            <span>{closeText}</span>
          </button>
        </div>
      </div>
    </div>
  </aside>
))} 