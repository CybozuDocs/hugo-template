---
import type { MarkdownLayoutProps } from "astro";
import Head from "./components/Head.astro";
import { env } from "../lib/env.js";
import { getCurrentPage, getSiteHomeSections } from "../lib/page";
import Disclaimer2 from "./components/Disclaimer2.astro";
// import Related from "./components/Related.astro";
import Footer from "./components/Footer.astro";
import Header from "./components/Header.astro";
import TreeNav from "./components/TreeNav.astro";
import Breadcrumb from "./components/Breadcrumb.astro";
import TreeNavToggle from "./components/TreeNavToggle.astro";
import GoToTop from "./components/GoToTop.astro";

type Props = MarkdownLayoutProps<{
  title?: string;
  description?: string;
  weight?: number;
}>;

// サイトのセクション情報を取得
const sections = await getSiteHomeSections();

// 現在ページを特定
const currentPage = getCurrentPage(Astro, sections);

// getCurrentPage()の結果をベースに、不足するプロパティを補完
const pageData = {
  ...currentPage,
  // frontmatterプロパティを明示的に保持
  frontmatter: currentPage.frontmatter,
  // Header.astroで必要な追加プロパティ（仮実装）
  allTranslations: [], // TODO: 多言語対応時に実装
  isTranslated: false, // TODO: 多言語対応時に実装
  scratch: {
    sitename: env.productName, // TODO: 適切なサイト名ロジックを実装
  },

  // LangSelector.astro用のプロパティ（仮実装）
  siteLanguage: {
    languageName: "日本語",
  },
  translations: [], // TODO: 多言語対応時に実装
};

// 無効化チェック（frontmatter経由で直接アクセス）
const isDisabled = currentPage.frontmatter.disabled.includes(env.targetRegion);
---

<!doctype html>
<!-- TODO: {{.Site.LanguageCode}} を置き換える -->
<html lang="ja" prefix="og: https://ogp.me/ns#">
  <head>
    <Head page={pageData} />
  </head>
  <!-- TODO: フォントサイズの指定を再現する -->
  <body class="font-{{.Lang}}">
    {
      isDisabled ? (
        <meta http-equiv="refresh" content="0; URL=/" />
      ) : (
        <>
          {env.targetRegion === "US" && <div>[LOCALE MODAL PARTIAL]</div>}

          {/* <!-- Announcement banner --> */}
          {/* <div>[ANNOUNCEMENT BANNER PARTIAL]</div> */}

          {/* <!-- Header --> */}
          <Header page={pageData} />

          <div class="page-pad" />

          {env.meganav && (
            <>
              <div class="mnav-pad" />
              <div>[MEGANAV PARTIAL]</div>
            </>
          )}

          <div id="page" class="page">
            <div id="tree" class="tree-wrap">
              <TreeNav page={pageData} />
            </div>

            <div id="contents" class="contents-wrap">
              {env.useWovn && <Disclaimer2 />}

              <main id="main" role="main">
                <Breadcrumb page={pageData} />

                <article class="article" role="article">
                  <div class="id-title">
                    <h1>{currentPage.frontmatter.title}</h1>
                    {env.idSearch && currentPage.frontmatter.aliases.length > 0 && (
                      <div>[ARTICLE LINK TEMPLATE]</div>
                    )}
                  </div>

                  {env.idSearch && currentPage.frontmatter.aliases.length > 0 && (
                    <div>[ARTICLE NUMBER TEMPLATE]</div>
                  )}

                  {currentPage.frontmatter.labels.length > 0 && (
                    <div>[HEADER LABEL TEMPLATE]</div>
                  )}

                  <slot />
                </article>

                {/* <Related env={env} page={pageData} /> */}

                {currentPage.frontmatter.type === "series" && <div>[PAGE NAV PARTIAL]</div>}
              </main>
            </div>

            <div class="sidebar-wrap">
              <nav id="rightside-bar">
                <h2 class="toc-title">i18n__todo__In_this_article</h2>
              </nav>
            </div>
          </div>

          <TreeNavToggle />
          <GoToTop />

          {env.supportInquiry && env.languageCode === "en-us" && (
            <div>[SUPPORT INQUIRY PARTIAL]</div>
          )}

          {/* <div>[ENQUETE PARTIAL]</div> */}
          <Footer page={pageData} />
        </>
      )
    }
  </body>
</html>
