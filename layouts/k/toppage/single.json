{{- define "partials/get_next_record_type" -}}
  {{- /* returns the next record type */}}
  {{- $ret_value := "" -}}
  {{- $len := sub .len 1 -}}
  {{- $next_idx := add .idx 1 -}}
  {{- if le $next_idx $len -}}
    {{- $next := index .rec $next_idx -}}
    {{- $ret_value = index $next 0 -}}
  {{- end -}}
  {{- return $ret_value -}}
{{- end -}}
{{- if eq $.Site.Params.TargetRegion "US" }}
  {{- $allpages := .Site.AllPages }}
  {{- $region := $.Site.Params.TargetRegion | upper }}
  {{- $lang := $.Site.LanguageCode }}
  {{- if eq (hasPrefix $lang "zh-tw") true }}
      {{- $lang = substr $lang 0 5 }}
  {{- else }}
      {{- $lang = substr $lang 0 2 }}
  {{- end }}
  {{- $path := (printf "%s/csv/home_%s.csv" $lang $region) }}
  {{- $records := slice }}
  {{- with resources.Get $path }}
    {{- $data := . | transform.Unmarshal (dict "delimiter" ",") }}
    {{- $records = $records | append $data }}
  {{- else }}
    {{ errorf "Unable to get resource %q" $path }}
  {{- end }}
  {{- $records_len := $records | len }}
{ 
  "categories": [
  {{- range $i, $r := $records }}
      {{- $type := index $r 0 }}
      {{- $value := index $r 1 }}
      {{- $text := index $r 2 }}
      {{- $next_type := partial "get_next_record_type" (dict "rec" $records "idx" $i "len" $records_len) }}
      {{- if eq $type "category"}}
        {
          "category_title": "{{$text}}",
          "category_class": "{{$value}}",
          "cards": [
      {{- else if eq $type "page" }}
        {{- if hasPrefix $value "http" }}
          {{- /* link to outer site */}}
                {
                  "card_type": "external",
                  "card_title": "{{$text}}",
                  "card_href": "{{$value}}"
                }
        {{- else }}
          {{- range $allpages }}
            {{- if eq (index .Params.aliases 0) $value }}
              {{- /* alias file is found */}}
              {{- $pages := .Pages }}
              {{- if .Sections}}
                {{- $pages = ($pages | union .Sections) }}
              {{- end}}
              {{- $pagecnt := $pages | len }}
              {{- if gt $pagecnt 0 }}
                {{- /* the page has sub pages */}}
                {
                  "card_type": "list",
                  "card_title": "{{- partial "title" . -}}",
                  "items":
                  [
                    { {{- /* the first item is a card title */}}
                      "item_title": "{{- partial "title" . -}}",
                      "item_href": "{{.Permalink}}"
                    },
                {{- range $idx, $page := $pages }}
                  {{- if ne .Type "redirect_js" }}
                    {
                      "item_title": "{{ partial "title" $page }}",
                      "item_href": "{{.Permalink}}"
                    }
                    {{- if ne $idx (sub $pagecnt 1) -}},{{- end }}
                  {{- end }}
                {{- end }}
                  ] {{- /* end of items list array */}}
                } {{- /* end of card array */}}
              {{- else }}
                {{- /* does not have page */}}
                {
                  "card_type": "single",
                  "card_title": "{{ partial "title" . }}",
                  "card_href": "{{.Permalink}}"
                }
              {{- end }}
              {{- break }} {{- /* when the alias id is found, exit the roop  */}}
            {{- end }} {{- /* aliase match end */}}
          {{- end }} {{- /* all pages roop end */}}
        {{- end }} {{- /* end of prefix "http" */}}
      {{- else if eq $type "partition" -}}
        { "card_type": "partition" }
      {{- end -}} {{- /* csv row type end */}}
      {{- /* the next record is not "category", add a comma. */}}
      {{- if and (ne $type "category") (ne $next_type "category") (ne $next_type "") -}},{{- end -}}
      {{- if eq $next_type "category" }}
          ]
        }, {{- /**** end  of cards collection */}}
      {{- else if eq $next_type "" }}
          ]
        } {{- /* the last record */}}
      {{- end }}
  {{- end -}} {{- /* end of csv row iteration */}}
], {{- /**** end  of category collection */}}
  "appendixes": [
  {{- $apx_path := (printf "%s/csv/home_apx_%s.csv" $lang $region) }}
  {{- $apx_records := slice }}
  {{- with resources.Get $apx_path }}
    {{- $apx_data := . | transform.Unmarshal (dict "delimiter" ",") }}
    {{- $apx_records = $apx_records | append $apx_data }}
  {{- else }}
    {{- /* appendix file is a optional, so error is not reportes */}}
  {{- end }}
  {{- $apx_records_len := $apx_records | len }}

  {{- range $apx_i, $apx_r := $apx_records }}
    {{- $apx_type := index $apx_r 0 }}
    {{- $apx_text := index $apx_r 1 }}
    {{- $apx_value := index $apx_r 2 }}
    {{- $apx_status := index $apx_r 3 }}
    {{- $apx_next_type := partial "get_next_record_type" (dict "rec" $apx_records "idx" $apx_i "len" $apx_records_len) }}
    {{- if eq $apx_type "category" }}
    {
      "category_title": "{{$apx_text}}",
      "category_class": "{{$apx_value}}",
      "items": [
    {{- else if eq $apx_type "link" }}
        {
          "item_title": "{{$apx_text}}",
          "item_href": "{{$apx_value}}",
          "item_jaonly": 
        {{- if eq $apx_status "jaonly" -}}
            true
        {{- else -}}
            false
        {{- end }}
        }
        {{- /* the next record is not "category", add a comma. */}}
        {{- if and (ne $apx_type "category") (ne $apx_next_type "category") (ne $apx_next_type "") -}},{{- end -}}
        {{- if eq $apx_next_type "category" }}
      ] {{- /**** end  of items */}}
    }, {{- /**** end  of category */}}
        {{- else if eq $apx_next_type "" }}
      ]
    } {{- /* the last record */}}
        {{- end }}
    {{- end }}
  {{- end }} {{- /* end of csv row iteration */}}
  ]
}
{{- end }}